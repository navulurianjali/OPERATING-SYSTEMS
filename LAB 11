#include <stdio.h>
#include <pthread.h>

// Function for the first thread
void* thread_function_1(void* arg) {
    printf("Thread 1 is executing\n");
    for(int i = 1; i <= 5; i++) {
        printf("Thread 1: %d\n", i);
    }
    return NULL;
}

// Function for the second thread
void* thread_function_2(void* arg) {
    printf("Thread 2 is executing\n");
    for(int i = 1; i <= 5; i++) {
        printf("Thread 2: %d\n", i);
    }
    return NULL;
}

int main() {
    pthread_t thread1, thread2;

    // Creating the first thread
    if(pthread_create(&thread1, NULL, thread_function_1, NULL) != 0) {
        printf("Error creating thread 1\n");
        return 1;
    }

    // Creating the second thread
    if(pthread_create(&thread2, NULL, thread_function_2, NULL) != 0) {
        printf("Error creating thread 2\n");
        return 1;
    }

    // Wait for both threads to complete
    pthread_join(thread1, NULL);
    pthread_join(thread2, NULL);

    printf("Main thread exiting\n");

    return 0;
}
